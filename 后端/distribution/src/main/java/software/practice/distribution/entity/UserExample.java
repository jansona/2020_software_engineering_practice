package software.practice.distribution.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("user_name in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("user_name not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserAddressIsNull() {
            addCriterion("user_address is null");
            return (Criteria) this;
        }

        public Criteria andUserAddressIsNotNull() {
            addCriterion("user_address is not null");
            return (Criteria) this;
        }

        public Criteria andUserAddressEqualTo(String value) {
            addCriterion("user_address =", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressNotEqualTo(String value) {
            addCriterion("user_address <>", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressGreaterThan(String value) {
            addCriterion("user_address >", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressGreaterThanOrEqualTo(String value) {
            addCriterion("user_address >=", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressLessThan(String value) {
            addCriterion("user_address <", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressLessThanOrEqualTo(String value) {
            addCriterion("user_address <=", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressLike(String value) {
            addCriterion("user_address like", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressNotLike(String value) {
            addCriterion("user_address not like", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressIn(List<String> values) {
            addCriterion("user_address in", values, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressNotIn(List<String> values) {
            addCriterion("user_address not in", values, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressBetween(String value1, String value2) {
            addCriterion("user_address between", value1, value2, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressNotBetween(String value1, String value2) {
            addCriterion("user_address not between", value1, value2, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeIsNull() {
            addCriterion("user_favorite_starttime is null");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeIsNotNull() {
            addCriterion("user_favorite_starttime is not null");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeEqualTo(Date value) {
            addCriterionForJDBCTime("user_favorite_starttime =", value, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("user_favorite_starttime <>", value, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeGreaterThan(Date value) {
            addCriterionForJDBCTime("user_favorite_starttime >", value, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("user_favorite_starttime >=", value, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeLessThan(Date value) {
            addCriterionForJDBCTime("user_favorite_starttime <", value, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("user_favorite_starttime <=", value, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeIn(List<Date> values) {
            addCriterionForJDBCTime("user_favorite_starttime in", values, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("user_favorite_starttime not in", values, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("user_favorite_starttime between", value1, value2, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserFavoriteStarttimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("user_favorite_starttime not between", value1, value2, "userFavoriteStarttime");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayIsNull() {
            addCriterion("user_time_stay is null");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayIsNotNull() {
            addCriterion("user_time_stay is not null");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayEqualTo(Integer value) {
            addCriterion("user_time_stay =", value, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayNotEqualTo(Integer value) {
            addCriterion("user_time_stay <>", value, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayGreaterThan(Integer value) {
            addCriterion("user_time_stay >", value, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_time_stay >=", value, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayLessThan(Integer value) {
            addCriterion("user_time_stay <", value, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayLessThanOrEqualTo(Integer value) {
            addCriterion("user_time_stay <=", value, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayIn(List<Integer> values) {
            addCriterion("user_time_stay in", values, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayNotIn(List<Integer> values) {
            addCriterion("user_time_stay not in", values, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayBetween(Integer value1, Integer value2) {
            addCriterion("user_time_stay between", value1, value2, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserTimeStayNotBetween(Integer value1, Integer value2) {
            addCriterion("user_time_stay not between", value1, value2, "userTimeStay");
            return (Criteria) this;
        }

        public Criteria andUserCommunityIsNull() {
            addCriterion("user_community is null");
            return (Criteria) this;
        }

        public Criteria andUserCommunityIsNotNull() {
            addCriterion("user_community is not null");
            return (Criteria) this;
        }

        public Criteria andUserCommunityEqualTo(Integer value) {
            addCriterion("user_community =", value, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityNotEqualTo(Integer value) {
            addCriterion("user_community <>", value, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityGreaterThan(Integer value) {
            addCriterion("user_community >", value, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_community >=", value, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityLessThan(Integer value) {
            addCriterion("user_community <", value, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityLessThanOrEqualTo(Integer value) {
            addCriterion("user_community <=", value, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityIn(List<Integer> values) {
            addCriterion("user_community in", values, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityNotIn(List<Integer> values) {
            addCriterion("user_community not in", values, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityBetween(Integer value1, Integer value2) {
            addCriterion("user_community between", value1, value2, "userCommunity");
            return (Criteria) this;
        }

        public Criteria andUserCommunityNotBetween(Integer value1, Integer value2) {
            addCriterion("user_community not between", value1, value2, "userCommunity");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbg.generated do_not_delete_during_merge Tue Apr 14 16:33:29 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbg.generated Tue Apr 14 16:33:29 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}